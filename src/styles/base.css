
@layer base {
  * {
    @apply border-border;
  }
  
  /* Specific debugging class for theme troubleshooting */
  .theme-debug-element {
    content: 'theme-loaded';
    display: none;
  }
  
  :root,
  html,
  body,
  #root {
    @apply min-h-screen h-full;
    background-color: hsl(var(--background)) !important;
    color: hsl(var(--foreground)) !important;
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 300ms;
  }
  
  html {
    @apply overflow-x-hidden scroll-smooth;
  }
  
  body {
    @apply overflow-x-hidden;
    font-feature-settings: "rlig" 1, "calt" 1;
  }
  
  /* Theme transition for specific properties only */
  *,
  *::before,
  *::after {
    @apply transition-colors duration-300;
  }
  
  h1, h2, h3, h4, h5, h6 {
    @apply font-medium tracking-tight;
  }
  
  h1 {
    @apply text-3xl sm:text-4xl;
  }
  
  h2 {
    @apply text-2xl sm:text-3xl;
  }
  
  h3 {
    @apply text-xl sm:text-2xl;
  }
  
  h4 {
    @apply text-lg sm:text-xl;
  }
  
  a {
    @apply text-primary hover:text-primary/80 transition-colors;
  }
  
  /* Focus styles */
  :focus-visible {
    @apply outline-none ring-2 ring-primary/50 ring-offset-1;
  }
  
  /* Improved Glass effect - unified for light and dark modes */
  .glass-effect {
    background-color: var(--glass-bg);
    backdrop-filter: blur(var(--glass-blur, 12px));
    border: 1px solid var(--glass-border);
    box-shadow: var(--glass-shadow);
  }
  
  /* Add debugging hook to check when base.css is fully loaded */
  .base-css-loaded {
    content: 'base-css-loaded';
  }
  
  /* Ensuring app layout components use theme colors */
  .app-root, 
  .dashboard-debug,
  .task-layout-debug {
    background-color: hsl(var(--background)) !important;
    color: hsl(var(--foreground)) !important;
  }
  
  /* Force all background classes to use theme colors */
  .bg-background {
    background-color: hsl(var(--background)) !important;
  }
  
  /* DARK MODE FIXES */
  /* Remove the global border override and instead target specific elements */
  .dark .card,
  .dark [class*="border-"] {
    border-color: hsl(var(--border) / 0.2);
  }
  
  .dark button,
  .dark input,
  .dark textarea,
  .dark select {
    border-color: hsl(var(--border) / 0.3);
  }
  
  /* Fix ALL SVG/icons in dark mode */
  .dark svg {
    color: inherit;
  }
  
  /* Fix card backgrounds in dark mode */
  .dark .card,
  .dark .bg-card,
  .dark [class*="card"],
  .dark [class*="bg-card"] {
    background-color: hsl(var(--card)) !important;
    color: hsl(var(--card-foreground)) !important;
  }
  
  /* Ensure dark mode text is properly visible */
  .dark .text-foreground,
  .dark p,
  .dark h1,
  .dark h2,
  .dark h3,
  .dark h4,
  .dark h5,
  .dark h6,
  .dark span,
  .dark div {
    color: hsl(var(--foreground));
  }

  /* Fix for components with nested background issues */
  main, 
  .container, 
  .container-fancy, 
  .layout-container,
  [class*="layout-"],
  [class*="-layout"],
  .app-container,
  .content-area,
  .page-container {
    background-color: transparent !important;
  }
  
  /* Fix glass effects in dark mode */
  .dark .glass-effect {
    background-color: var(--glass-bg) !important;
    border-color: var(--glass-border) !important;
  }
  
  /* Fix input backgrounds in dark mode */
  .dark input,
  .dark textarea,
  .dark select {
    background-color: hsl(var(--card)) !important;
    border-color: hsl(var(--border) / 0.3) !important;
    color: hsl(var(--foreground)) !important;
  }
  
  /* Specific component overrides for dark mode */
  .dark .task-item,
  .dark .note-item,
  .dark .habit-item,
  .dark .settings-card,
  .dark .timer-card {
    border-color: hsl(var(--border) / 0.2) !important;
    background-color: hsl(var(--card)) !important;
  }
}
